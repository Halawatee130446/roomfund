<?php
// setup.php
// เรียกไฟล์นี้ครั้งแรกเพื่อสร้าง DB + ตาราง + seed data และจะสร้าง payment_channels.php เริ่มต้นถ้ายังไม่มี
// วางไฟล์นี้ในโฟลเดอร์ projectRoomfund แล้วเข้าผ่านเบราว์เซอร์ http://localhost/projectRoomfund/setup.php

require_once 'config.php';

function safe_write_php_array_file($path, $data) {
    // สร้างเนื้อหา PHP ที่คืนค่า array ด้วย var_export
    $export = var_export($data, true);
    $content = "<?php\n// auto-generated by setup.php\nreturn " . $export . ";\n";
    $tmp = $path . '.tmp';
    // เขียนไฟล์ชั่วคราวแบบ LOCK_EX
    if (file_put_contents($tmp, $content, LOCK_EX) === false) {
        return false;
    }
    @chmod($tmp, 0664);
    if (!@rename($tmp, $path)) {
        @unlink($tmp);
        return false;
    }
    return true;
}

try {
    // connect to MySQL server (without db) to create database
    $pdo = new PDO("mysql:host=".DB_HOST, DB_USER, DB_PASS, [
        PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION
    ]);

    // create database if not exists
    $pdo->exec("CREATE DATABASE IF NOT EXISTS `".DB_NAME."` CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci");
    echo "<p>Database `".htmlspecialchars(DB_NAME)."` ensured.</p>";

    // use database
    $pdo->exec("USE `".DB_NAME."`");

    // create tables
    $schema = "
    CREATE TABLE IF NOT EXISTS member (
      member_id INT AUTO_INCREMENT PRIMARY KEY,
      full_name VARCHAR(255) NOT NULL,
      student_code VARCHAR(50),
      tel VARCHAR(30),
      address TEXT,
      role ENUM('member','treasurer') DEFAULT 'member',
      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    );

    CREATE TABLE IF NOT EXISTS user_account (
      user_id INT AUTO_INCREMENT PRIMARY KEY,
      member_id INT NOT NULL,
      username VARCHAR(100) NOT NULL UNIQUE,
      password_hash VARCHAR(255) NOT NULL,
      FOREIGN KEY (member_id) REFERENCES member(member_id) ON DELETE CASCADE
    );

    CREATE TABLE IF NOT EXISTS payment_period (
      period_id INT AUTO_INCREMENT PRIMARY KEY,
      month TINYINT NOT NULL,
      year SMALLINT NOT NULL,
      amount_due DECIMAL(10,2) NOT NULL,
      due_date DATE,
      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    );

    CREATE TABLE IF NOT EXISTS payment (
      payment_id INT AUTO_INCREMENT PRIMARY KEY,
      member_id INT NOT NULL,
      period_id INT NOT NULL,
      amount_paid DECIMAL(10,2),
      pay_date DATETIME,
      receipt_filename VARCHAR(255),
      status ENUM('Unpaid','Pending','Paid','Waived') DEFAULT 'Unpaid',
      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
      FOREIGN KEY (member_id) REFERENCES member(member_id),
      FOREIGN KEY (period_id) REFERENCES payment_period(period_id)
    );

    CREATE TABLE IF NOT EXISTS expense (
      expense_id INT AUTO_INCREMENT PRIMARY KEY,
      expense_date DATE NOT NULL,
      description TEXT,
      category VARCHAR(100),
      activity VARCHAR(100),
      amount DECIMAL(10,2) NOT NULL,
      created_by INT,
      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
      FOREIGN KEY (created_by) REFERENCES member(member_id)
    );
    ";
    $pdo->exec($schema);
    echo "<p>Tables created/ensured.</p>";

    // insert seed members if not exists
    $check = $pdo->prepare("SELECT COUNT(*) as c FROM user_account WHERE username IN ('member','treasurer')");
    $check->execute();
    $countRow = $check->fetch(PDO::FETCH_ASSOC);
    if ($countRow && $countRow['c'] > 0) {
        echo "<p>Seed users already exist (skipping user seed).</p>";
    } else {
        // create members
        $stmt = $pdo->prepare("INSERT INTO member (full_name, student_code, role) VALUES (?, ?, ?)");
        $stmt->execute(['Demo Member','S001','member']);
        $memberId1 = $pdo->lastInsertId();
        $stmt->execute(['Demo Treasurer','T001','treasurer']);
        $memberId2 = $pdo->lastInsertId();

        // create accounts
        $pwd1 = password_hash('member123', PASSWORD_DEFAULT);
        $pwd2 = password_hash('treasurer123', PASSWORD_DEFAULT);
        $ins = $pdo->prepare("INSERT INTO user_account (member_id, username, password_hash) VALUES (?, ?, ?)");
        $ins->execute([$memberId1, 'member', $pwd1]);
        $ins->execute([$memberId2, 'treasurer', $pwd2]);

        echo "<p>Seed users created: member/member123 , treasurer/treasurer123</p>";
    }

    // create payment_channels.php if not exists
    $channels_file = __DIR__ . '/payment_channels.php';
    if (file_exists($channels_file)) {
        echo "<p>payment_channels.php already exists (not overwritten).</p>";
    } else {
        $initial_channels = [
            [
                'bank' => 'ธนาคารกรุงเทพ',
                'account_no' => '012-345-6789',
                'account_name' => 'กองทุนห้อง',
                'note' => 'โปรดใส่ชื่อผู้โอนในสลิปและแจ้งเหรัญญิก'
            ],
            [
                'bank' => 'ธนาคารกสิกร',
                'account_no' => '987-654-3210',
                'account_name' => 'กองทุนห้อง',
                'note' => 'ถ้ามีปัญหาแจ้งเหรัญญิก'
            ],
        ];
        $ok = safe_write_php_array_file($channels_file, $initial_channels);
        if ($ok) {
            echo "<p>payment_channels.php created with initial channels.</p>";
        } else {
            echo "<p style='color:orange;'>Unable to create payment_channels.php automatically. Please check file permissions for the folder and create the file manually using the example in the docs.</p>";
        }
    }

    echo "<p>Setup finished. You can now go to <a href='login.php'>login.php</a>.</p>";
    echo "<p>If you want to re-run setup, remove payment_channels.php and re-run, but be careful: re-running may not re-create seed users.</p>";

} catch (PDOException $e) {
    echo "<p style='color:red;'>Setup failed: " . htmlspecialchars($e->getMessage()) . "</p>";
    exit;
}
